{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Student-PC\\\\Downloads\\\\k\\\\k\\\\komal\\\\k\\\\react-portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Student-PC\\\\Downloads\\\\k\\\\k\\\\komal\\\\k\\\\react-portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Bouncer = void 0;\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Modes_1 = require(\"../../Enums/Modes\");\n\nvar Utils_2 = require(\"../../Utils\");\n\nvar Modes_2 = require(\"../../Enums/Modes\");\n\nvar Types_1 = require(\"../../Enums/Types\");\n\nvar Bouncer = /*#__PURE__*/function () {\n  function Bouncer(container) {\n    _classCallCheck(this, Bouncer);\n\n    this.container = container;\n  }\n\n  _createClass(Bouncer, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container;\n      var options = container.options;\n      var mouse = container.interactivity.mouse;\n      var events = options.interactivity.events;\n      var divs = events.onDiv;\n      return mouse.position && events.onHover.enable && Utils_2.Utils.isInArray(Modes_1.HoverMode.bounce, events.onHover.mode) || Utils_2.Utils.isDivModeEnabled(Modes_2.DivMode.bounce, divs);\n    }\n  }, {\n    key: \"interact\",\n    value: function interact() {\n      var _this = this;\n\n      var container = this.container;\n      var options = container.options;\n      var events = options.interactivity.events;\n      var mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n      var hoverEnabled = events.onHover.enable;\n      var hoverMode = events.onHover.mode;\n      var divs = events.onDiv;\n\n      if (mouseMoveStatus && hoverEnabled && Utils_2.Utils.isInArray(Modes_1.HoverMode.bounce, hoverMode)) {\n        this.processMouseBounce();\n      } else {\n        Utils_2.Utils.divModeExecute(Modes_2.DivMode.bounce, divs, function (selector, div) {\n          return _this.singleSelectorBounce(selector, div);\n        });\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"processMouseBounce\",\n    value: function processMouseBounce() {\n      var container = this.container;\n      var pxRatio = container.retina.pixelRatio;\n      var tolerance = 10 * pxRatio;\n      var mousePos = container.interactivity.mouse.position;\n      var radius = container.retina.bounceModeDistance;\n\n      if (mousePos) {\n        this.processBounce(mousePos, radius, new Utils_2.Circle(mousePos.x, mousePos.y, radius + tolerance));\n      }\n    }\n  }, {\n    key: \"singleSelectorBounce\",\n    value: function singleSelectorBounce(selector, div) {\n      var _this2 = this;\n\n      var container = this.container;\n      var query = document.querySelectorAll(selector);\n\n      if (!query.length) {\n        return;\n      }\n\n      query.forEach(function (item) {\n        var elem = item;\n        var pxRatio = container.retina.pixelRatio;\n        var pos = {\n          x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n          y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n        };\n        var radius = elem.offsetWidth / 2 * pxRatio;\n        var tolerance = 10 * pxRatio;\n        var area = div.type === Types_1.DivType.circle ? new Utils_2.Circle(pos.x, pos.y, radius + tolerance) : new Utils_2.Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n\n        _this2.processBounce(pos, radius, area);\n      });\n    }\n  }, {\n    key: \"processBounce\",\n    value: function processBounce(position, radius, area) {\n      var query = this.container.particles.quadTree.query(area);\n\n      var _iterator = _createForOfIteratorHelper(query),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n\n          if (area instanceof Utils_2.Circle) {\n            Utils_2.Utils.circleBounce(Utils_2.Utils.circleBounceDataFromParticle(particle), {\n              position: position,\n              radius: radius,\n              velocity: {\n                horizontal: 0,\n                vertical: 0\n              },\n              factor: {\n                horizontal: 0,\n                vertical: 0\n              }\n            });\n          } else if (area instanceof Utils_2.Rectangle) {\n            Utils_2.Utils.rectBounce(particle, Utils_2.Utils.calculateBounds(position, radius));\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }]);\n\n  return Bouncer;\n}();\n\nexports.Bouncer = Bouncer;","map":null,"metadata":{},"sourceType":"script"}