{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\KOMAL\\\\Desktop\\\\k\\\\react-portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\KOMAL\\\\Desktop\\\\k\\\\react-portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Retina = void 0;\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Retina = /*#__PURE__*/function () {\n  function Retina(container) {\n    _classCallCheck(this, Retina);\n\n    this.container = container;\n  }\n\n  _createClass(Retina, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      var container = this.container;\n      var options = container.options;\n\n      if (options.detectRetina) {\n        this.pixelRatio = Utils_1.Utils.isSsr() ? 1 : window.devicePixelRatio;\n      } else {\n        this.pixelRatio = 1;\n      }\n\n      var motionOptions = this.container.options.motion;\n\n      if (motionOptions && (motionOptions.disable || motionOptions.reduce.value)) {\n        if (Utils_1.Utils.isSsr() || typeof matchMedia === \"undefined\" || !matchMedia) {\n          this.reduceFactor = 1;\n        } else {\n          var mediaQuery = matchMedia(\"(prefers-reduced-motion: reduce)\");\n\n          if (mediaQuery) {\n            this.handleMotionChange(mediaQuery);\n\n            var handleChange = function handleChange() {\n              _this.handleMotionChange(mediaQuery);\n\n              container.refresh().catch(function () {});\n            };\n\n            if (mediaQuery.addEventListener !== undefined) {\n              mediaQuery.addEventListener(\"change\", handleChange);\n            } else if (mediaQuery.addListener !== undefined) {\n              mediaQuery.addListener(handleChange);\n            }\n          }\n        }\n      } else {\n        this.reduceFactor = 1;\n      }\n\n      var ratio = this.pixelRatio;\n\n      if (container.canvas.element) {\n        var element = container.canvas.element;\n        container.canvas.size.width = element.offsetWidth * ratio;\n        container.canvas.size.height = element.offsetHeight * ratio;\n      }\n\n      var particles = options.particles;\n      this.linksDistance = particles.links.distance * ratio;\n      this.linksWidth = particles.links.width * ratio;\n      this.moveSpeed = particles.move.speed * ratio;\n      this.sizeValue = particles.size.value * ratio;\n      this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n      var modes = options.interactivity.modes;\n      this.connectModeDistance = modes.connect.distance * ratio;\n      this.connectModeRadius = modes.connect.radius * ratio;\n      this.grabModeDistance = modes.grab.distance * ratio;\n      this.repulseModeDistance = modes.repulse.distance * ratio;\n      this.bounceModeDistance = modes.bounce.distance * ratio;\n      this.attractModeDistance = modes.attract.distance * ratio;\n      this.slowModeRadius = modes.slow.radius * ratio;\n      this.bubbleModeDistance = modes.bubble.distance * ratio;\n\n      if (modes.bubble.size) {\n        this.bubbleModeSize = modes.bubble.size * ratio;\n      }\n    }\n  }, {\n    key: \"initParticle\",\n    value: function initParticle(particle) {\n      var particlesOptions = particle.particlesOptions;\n      var ratio = this.pixelRatio;\n      particle.linksDistance = particlesOptions.links.distance * ratio;\n      particle.linksWidth = particlesOptions.links.width * ratio;\n      particle.moveSpeed = particlesOptions.move.speed * ratio;\n      particle.sizeValue = particlesOptions.size.value * ratio;\n      particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n      particle.maxDistance = particlesOptions.move.distance * ratio;\n    }\n  }, {\n    key: \"handleMotionChange\",\n    value: function handleMotionChange(mediaQuery) {\n      var options = this.container.options;\n\n      if (mediaQuery.matches) {\n        var motion = options.motion;\n        this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n      } else {\n        this.reduceFactor = 1;\n      }\n    }\n  }]);\n\n  return Retina;\n}();\n\nexports.Retina = Retina;","map":null,"metadata":{},"sourceType":"script"}