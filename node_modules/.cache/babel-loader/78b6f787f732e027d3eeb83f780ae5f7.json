{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\KOMAL\\\\Desktop\\\\k\\\\react-portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\KOMAL\\\\Desktop\\\\k\\\\react-portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\KOMAL\\\\Desktop\\\\k\\\\react-portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Loader = void 0;\n\nvar Container_1 = require(\"./Container\");\n\nvar Utils_1 = require(\"../Utils\");\n\nvar tsParticlesDom = [];\n\nfunction fetchError(statusCode) {\n  console.error(\"Error tsParticles - fetch status: \".concat(statusCode));\n  console.error(\"Error tsParticles - File config not found\");\n}\n\nvar Loader = /*#__PURE__*/function () {\n  function Loader() {\n    _classCallCheck(this, Loader);\n  }\n\n  _createClass(Loader, null, [{\n    key: \"dom\",\n    value: function dom() {\n      return tsParticlesDom;\n    }\n  }, {\n    key: \"domItem\",\n    value: function domItem(index) {\n      var dom = Loader.dom();\n      var item = dom[index];\n\n      if (item && !item.destroyed) {\n        return item;\n      }\n\n      dom.splice(index, 1);\n    }\n  }, {\n    key: \"load\",\n    value: function load(tagId, options, index) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var domContainer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                domContainer = document.getElementById(tagId);\n\n                if (domContainer) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                return _context.abrupt(\"return\", Loader.set(tagId, domContainer, options, index));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    }\n  }, {\n    key: \"set\",\n    value: function set(id, domContainer, options, index) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var currentOptions, dom, oldIndex, old, canvasEl, generatedCanvas, existingCanvases, newItem;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                currentOptions = options instanceof Array ? Utils_1.Utils.itemFromArray(options, index) : options;\n                dom = Loader.dom();\n                oldIndex = dom.findIndex(function (v) {\n                  return v.id === id;\n                });\n\n                if (oldIndex >= 0) {\n                  old = Loader.domItem(oldIndex);\n\n                  if (old && !old.destroyed) {\n                    old.destroy();\n                    dom.splice(oldIndex, 1);\n                  }\n                }\n\n                if (domContainer.tagName.toLowerCase() === \"canvas\") {\n                  canvasEl = domContainer;\n                  generatedCanvas = false;\n                } else {\n                  existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n\n                  if (existingCanvases.length) {\n                    canvasEl = existingCanvases[0];\n\n                    if (!canvasEl.className) {\n                      canvasEl.className = Utils_1.Constants.canvasClass;\n                    }\n\n                    generatedCanvas = false;\n                  } else {\n                    generatedCanvas = true;\n                    canvasEl = document.createElement(\"canvas\");\n                    canvasEl.className = Utils_1.Constants.canvasClass;\n                    canvasEl.style.width = \"100%\";\n                    canvasEl.style.height = \"100%\";\n                    domContainer.appendChild(canvasEl);\n                  }\n                }\n\n                newItem = new Container_1.Container(id, currentOptions);\n\n                if (oldIndex >= 0) {\n                  dom.splice(oldIndex, 0, newItem);\n                } else {\n                  dom.push(newItem);\n                }\n\n                newItem.canvas.loadCanvas(canvasEl, generatedCanvas);\n                _context2.next = 10;\n                return newItem.start();\n\n              case 10:\n                return _context2.abrupt(\"return\", newItem);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n    }\n  }, {\n    key: \"loadJSON\",\n    value: function loadJSON(tagId, jsonUrl, index) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var url, response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                url = jsonUrl instanceof Array ? Utils_1.Utils.itemFromArray(jsonUrl, index) : jsonUrl;\n                _context3.next = 3;\n                return fetch(url);\n\n              case 3:\n                response = _context3.sent;\n\n                if (!response.ok) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                _context3.t0 = Loader;\n                _context3.t1 = tagId;\n                _context3.next = 9;\n                return response.json();\n\n              case 9:\n                _context3.t2 = _context3.sent;\n                return _context3.abrupt(\"return\", _context3.t0.load.call(_context3.t0, _context3.t1, _context3.t2));\n\n              case 13:\n                fetchError(response.status);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n    }\n  }, {\n    key: \"setJSON\",\n    value: function setJSON(id, domContainer, jsonUrl) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var response, options;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return fetch(jsonUrl);\n\n              case 2:\n                response = _context4.sent;\n\n                if (!response.ok) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                _context4.next = 6;\n                return response.json();\n\n              case 6:\n                options = _context4.sent;\n                return _context4.abrupt(\"return\", Loader.set(id, domContainer, options));\n\n              case 10:\n                fetchError(response.status);\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n    }\n  }, {\n    key: \"setOnClickHandler\",\n    value: function setOnClickHandler(callback) {\n      var dom = Loader.dom();\n\n      if (dom.length === 0) {\n        throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n      }\n\n      var _iterator = _createForOfIteratorHelper(dom),\n          _step;\n\n      try {\n        var _loop = function _loop() {\n          var domItem = _step.value;\n          var el = domItem.interactivity.element;\n\n          if (!el) {\n            return \"continue\";\n          }\n\n          var clickOrTouchHandler = function clickOrTouchHandler(e, pos) {\n            if (domItem.destroyed) {\n              return;\n            }\n\n            var pxRatio = domItem.retina.pixelRatio;\n            var posRetina = {\n              x: pos.x * pxRatio,\n              y: pos.y * pxRatio\n            };\n            var particles = domItem.particles.quadTree.queryCircle(posRetina, domItem.retina.sizeValue);\n            callback(e, particles);\n          };\n\n          var clickHandler = function clickHandler(e) {\n            if (domItem.destroyed) {\n              return;\n            }\n\n            var mouseEvent = e;\n            var pos = {\n              x: mouseEvent.offsetX || mouseEvent.clientX,\n              y: mouseEvent.offsetY || mouseEvent.clientY\n            };\n            clickOrTouchHandler(e, pos);\n          };\n\n          var touchStartHandler = function touchStartHandler() {\n            if (domItem.destroyed) {\n              return;\n            }\n\n            touched = true;\n            touchMoved = false;\n          };\n\n          var touchMoveHandler = function touchMoveHandler() {\n            if (domItem.destroyed) {\n              return;\n            }\n\n            touchMoved = true;\n          };\n\n          var touchEndHandler = function touchEndHandler(e) {\n            var _a, _b, _c;\n\n            if (domItem.destroyed) {\n              return;\n            }\n\n            if (touched && !touchMoved) {\n              var touchEvent = e;\n              var lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n              var canvasRect = (_a = domItem.canvas.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n              var pos = {\n                x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n                y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0)\n              };\n              clickOrTouchHandler(e, pos);\n            }\n\n            touched = false;\n            touchMoved = false;\n          };\n\n          var touchCancelHandler = function touchCancelHandler() {\n            if (domItem.destroyed) {\n              return;\n            }\n\n            touched = false;\n            touchMoved = false;\n          };\n\n          var touched = false;\n          var touchMoved = false;\n          el.addEventListener(\"click\", clickHandler);\n          el.addEventListener(\"touchstart\", touchStartHandler);\n          el.addEventListener(\"touchmove\", touchMoveHandler);\n          el.addEventListener(\"touchend\", touchEndHandler);\n          el.addEventListener(\"touchcancel\", touchCancelHandler);\n        };\n\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _ret = _loop();\n\n          if (_ret === \"continue\") continue;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }]);\n\n  return Loader;\n}();\n\nexports.Loader = Loader;","map":null,"metadata":{},"sourceType":"script"}