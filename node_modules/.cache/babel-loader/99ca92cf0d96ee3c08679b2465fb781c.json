{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\KOMAL\\\\Desktop\\\\k\\\\react-portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\KOMAL\\\\Desktop\\\\k\\\\react-portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\KOMAL\\\\Desktop\\\\k\\\\react-portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Utils = void 0;\n\nvar OutModeDirection_1 = require(\"../Enums/Directions/OutModeDirection\");\n\nvar NumberUtils_1 = require(\"./NumberUtils\");\n\nfunction rectSideBounce(pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor) {\n  var res = {\n    bounced: false\n  };\n\n  if (pOtherSide.min >= rectOtherSide.min && pOtherSide.min <= rectOtherSide.max && pOtherSide.max >= rectOtherSide.min && pOtherSide.max <= rectOtherSide.max) {\n    if (pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0 || pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0) {\n      res.velocity = velocity * -factor;\n      res.bounced = true;\n    }\n  }\n\n  return res;\n}\n\nfunction checkSelector(element, selectors) {\n  if (selectors instanceof Array) {\n    var _iterator = _createForOfIteratorHelper(selectors),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var selector = _step.value;\n\n        if (element.matches(selector)) {\n          return true;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return false;\n  } else {\n    return element.matches(selectors);\n  }\n}\n\nvar Utils = /*#__PURE__*/function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n\n  _createClass(Utils, null, [{\n    key: \"isSsr\",\n    value: function isSsr() {\n      return typeof window === \"undefined\" || !window;\n    }\n  }, {\n    key: \"isInArray\",\n    value: function isInArray(value, array) {\n      return value === array || array instanceof Array && array.indexOf(value) > -1;\n    }\n  }, {\n    key: \"loadFont\",\n    value: function loadFont(character) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return document.fonts.load(\"\".concat(character.weight, \" 36px '\").concat(character.font, \"'\"));\n\n              case 3:\n                _context.next = 7;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](0);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 5]]);\n      }));\n    }\n  }, {\n    key: \"arrayRandomIndex\",\n    value: function arrayRandomIndex(array) {\n      return Math.floor(Math.random() * array.length);\n    }\n  }, {\n    key: \"itemFromArray\",\n    value: function itemFromArray(array, index) {\n      var useIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var fixedIndex = index !== undefined && useIndex ? index % array.length : Utils.arrayRandomIndex(array);\n      return array[fixedIndex];\n    }\n  }, {\n    key: \"isPointInside\",\n    value: function isPointInside(point, size, radius, direction) {\n      return Utils.areBoundsInside(Utils.calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size, direction);\n    }\n  }, {\n    key: \"areBoundsInside\",\n    value: function areBoundsInside(bounds, size, direction) {\n      var inside = true;\n\n      if (!direction || direction === OutModeDirection_1.OutModeDirection.bottom) {\n        inside = bounds.top < size.height;\n      }\n\n      if (inside && (!direction || direction === OutModeDirection_1.OutModeDirection.left)) {\n        inside = bounds.right > 0;\n      }\n\n      if (inside && (!direction || direction === OutModeDirection_1.OutModeDirection.right)) {\n        inside = bounds.left < size.width;\n      }\n\n      if (inside && (!direction || direction === OutModeDirection_1.OutModeDirection.top)) {\n        inside = bounds.bottom > 0;\n      }\n\n      return inside;\n    }\n  }, {\n    key: \"calculateBounds\",\n    value: function calculateBounds(point, radius) {\n      return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius\n      };\n    }\n  }, {\n    key: \"loadImage\",\n    value: function loadImage(source) {\n      return new Promise(function (resolve, reject) {\n        if (!source) {\n          reject(\"Error tsParticles - No image.src\");\n          return;\n        }\n\n        var image = {\n          source: source,\n          type: source.substr(source.length - 3)\n        };\n        var img = new Image();\n        img.addEventListener(\"load\", function () {\n          image.element = img;\n          resolve(image);\n        });\n        img.addEventListener(\"error\", function () {\n          reject(\"Error tsParticles - loading image: \".concat(source));\n        });\n        img.src = source;\n      });\n    }\n  }, {\n    key: \"downloadSvgImage\",\n    value: function downloadSvgImage(source) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var image, response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (source) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw new Error(\"Error tsParticles - No image.src\");\n\n              case 2:\n                image = {\n                  source: source,\n                  type: source.substr(source.length - 3)\n                };\n\n                if (!(image.type !== \"svg\")) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", Utils.loadImage(source));\n\n              case 5:\n                _context2.next = 7;\n                return fetch(image.source);\n\n              case 7:\n                response = _context2.sent;\n\n                if (response.ok) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                throw new Error(\"Error tsParticles - Image not found\");\n\n              case 10:\n                _context2.next = 12;\n                return response.text();\n\n              case 12:\n                image.svgData = _context2.sent;\n                return _context2.abrupt(\"return\", image);\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n    }\n  }, {\n    key: \"deepExtend\",\n    value: function deepExtend(destination) {\n      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n      }\n\n      for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n        var source = _sources[_i];\n\n        if (source === undefined || source === null) {\n          continue;\n        }\n\n        if (typeof source !== \"object\") {\n          destination = source;\n          continue;\n        }\n\n        var sourceIsArray = Array.isArray(source);\n\n        if (sourceIsArray && (typeof destination !== \"object\" || !destination || !Array.isArray(destination))) {\n          destination = [];\n        } else if (!sourceIsArray && (typeof destination !== \"object\" || !destination || Array.isArray(destination))) {\n          destination = {};\n        }\n\n        var _loop = function _loop(key) {\n          if (key === \"__proto__\") {\n            return \"continue\";\n          }\n\n          var sourceDict = source;\n          var value = sourceDict[key];\n          var isObject = typeof value === \"object\";\n          var destDict = destination;\n          destDict[key] = isObject && Array.isArray(value) ? value.map(function (v) {\n            return Utils.deepExtend(destDict[key], v);\n          }) : Utils.deepExtend(destDict[key], value);\n        };\n\n        for (var key in source) {\n          var _ret = _loop(key);\n\n          if (_ret === \"continue\") continue;\n        }\n      }\n\n      return destination;\n    }\n  }, {\n    key: \"isDivModeEnabled\",\n    value: function isDivModeEnabled(mode, divs) {\n      return divs instanceof Array ? !!divs.find(function (t) {\n        return t.enable && Utils.isInArray(mode, t.mode);\n      }) : Utils.isInArray(mode, divs.mode);\n    }\n  }, {\n    key: \"divModeExecute\",\n    value: function divModeExecute(mode, divs, callback) {\n      if (divs instanceof Array) {\n        var _iterator2 = _createForOfIteratorHelper(divs),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var div = _step2.value;\n            var divMode = div.mode;\n            var divEnabled = div.enable;\n\n            if (divEnabled && Utils.isInArray(mode, divMode)) {\n              Utils.singleDivModeExecute(div, callback);\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } else {\n        var _divMode = divs.mode;\n        var _divEnabled = divs.enable;\n\n        if (_divEnabled && Utils.isInArray(mode, _divMode)) {\n          Utils.singleDivModeExecute(divs, callback);\n        }\n      }\n    }\n  }, {\n    key: \"singleDivModeExecute\",\n    value: function singleDivModeExecute(div, callback) {\n      var selectors = div.selectors;\n\n      if (selectors instanceof Array) {\n        var _iterator3 = _createForOfIteratorHelper(selectors),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var selector = _step3.value;\n            callback(selector, div);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      } else {\n        callback(selectors, div);\n      }\n    }\n  }, {\n    key: \"divMode\",\n    value: function divMode(divs, element) {\n      if (!element || !divs) {\n        return;\n      }\n\n      if (divs instanceof Array) {\n        return divs.find(function (d) {\n          return checkSelector(element, d.selectors);\n        });\n      } else if (checkSelector(element, divs.selectors)) {\n        return divs;\n      }\n    }\n  }, {\n    key: \"circleBounceDataFromParticle\",\n    value: function circleBounceDataFromParticle(p) {\n      return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        velocity: p.velocity,\n        factor: {\n          horizontal: NumberUtils_1.NumberUtils.getValue(p.particlesOptions.bounce.horizontal),\n          vertical: NumberUtils_1.NumberUtils.getValue(p.particlesOptions.bounce.vertical)\n        }\n      };\n    }\n  }, {\n    key: \"circleBounce\",\n    value: function circleBounce(p1, p2) {\n      var xVelocityDiff = p1.velocity.horizontal;\n      var yVelocityDiff = p1.velocity.vertical;\n      var pos1 = p1.position;\n      var pos2 = p2.position;\n      var xDist = pos2.x - pos1.x;\n      var yDist = pos2.y - pos1.y;\n\n      if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n        var angle = -Math.atan2(pos2.y - pos1.y, pos2.x - pos1.x);\n        var m1 = p1.radius;\n        var m2 = p2.radius;\n        var u1 = NumberUtils_1.NumberUtils.rotateVelocity(p1.velocity, angle);\n        var u2 = NumberUtils_1.NumberUtils.rotateVelocity(p2.velocity, angle);\n        var v1 = NumberUtils_1.NumberUtils.collisionVelocity(u1, u2, m1, m2);\n        var v2 = NumberUtils_1.NumberUtils.collisionVelocity(u2, u1, m1, m2);\n        var vFinal1 = NumberUtils_1.NumberUtils.rotateVelocity(v1, -angle);\n        var vFinal2 = NumberUtils_1.NumberUtils.rotateVelocity(v2, -angle);\n        p1.velocity.horizontal = vFinal1.horizontal * p1.factor.horizontal;\n        p1.velocity.vertical = vFinal1.vertical * p1.factor.vertical;\n        p2.velocity.horizontal = vFinal2.horizontal * p2.factor.horizontal;\n        p2.velocity.vertical = vFinal2.vertical * p2.factor.vertical;\n      }\n    }\n  }, {\n    key: \"rectBounce\",\n    value: function rectBounce(particle, divBounds) {\n      var pPos = particle.getPosition();\n      var size = particle.getRadius();\n      var bounds = Utils.calculateBounds(pPos, size);\n      var resH = rectSideBounce({\n        min: bounds.left,\n        max: bounds.right\n      }, {\n        min: bounds.top,\n        max: bounds.bottom\n      }, {\n        min: divBounds.left,\n        max: divBounds.right\n      }, {\n        min: divBounds.top,\n        max: divBounds.bottom\n      }, particle.velocity.horizontal, NumberUtils_1.NumberUtils.getValue(particle.particlesOptions.bounce.horizontal));\n\n      if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n          particle.velocity.horizontal = resH.velocity;\n        }\n\n        if (resH.position !== undefined) {\n          particle.position.x = resH.position;\n        }\n      }\n\n      var resV = rectSideBounce({\n        min: bounds.top,\n        max: bounds.bottom\n      }, {\n        min: bounds.left,\n        max: bounds.right\n      }, {\n        min: divBounds.top,\n        max: divBounds.bottom\n      }, {\n        min: divBounds.left,\n        max: divBounds.right\n      }, particle.velocity.vertical, NumberUtils_1.NumberUtils.getValue(particle.particlesOptions.bounce.vertical));\n\n      if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n          particle.velocity.vertical = resV.velocity;\n        }\n\n        if (resV.position !== undefined) {\n          particle.position.y = resV.position;\n        }\n      }\n    }\n  }, {\n    key: \"animate\",\n    get: function get() {\n      return Utils.isSsr() ? function (callback) {\n        return setTimeout(callback);\n      } : function (callback) {\n        return (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || window.setTimeout)(callback);\n      };\n    }\n  }, {\n    key: \"cancelAnimation\",\n    get: function get() {\n      return Utils.isSsr() ? function (handle) {\n        return clearTimeout(handle);\n      } : function (handle) {\n        return (window.cancelAnimationFrame || window.webkitCancelRequestAnimationFrame || window.mozCancelRequestAnimationFrame || window.oCancelRequestAnimationFrame || window.msCancelRequestAnimationFrame || window.clearTimeout)(handle);\n      };\n    }\n  }]);\n\n  return Utils;\n}();\n\nexports.Utils = Utils;","map":null,"metadata":{},"sourceType":"script"}